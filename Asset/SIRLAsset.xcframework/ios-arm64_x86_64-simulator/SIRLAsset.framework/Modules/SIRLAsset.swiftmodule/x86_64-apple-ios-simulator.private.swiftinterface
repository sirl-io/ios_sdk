// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name SIRLAsset
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
import SIRLCore
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
@available(iOS 10.0, *)
public struct ProgramAssetTag : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTag
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(mlId: Swift.Int32, mac: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct AssociateAssetWithTag : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTagMapping
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(assetId: Swift.Int32, tagId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct GetSkuList : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAssetSku]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(typeId: Swift.Int32, mlid: Swift.Int32?)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct GetAssetBySKUs : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAsset]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(typeId: Swift.Int32, mlid: Swift.Int32? = nil, skus: [Swift.Int32])
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class SirlAsset : Swift.Decodable {
  public var id: Swift.Int32
  public var externalId: Swift.String?
  public var sku: SIRLAsset.SirlAssetSku?
  public var name: Swift.String {
    get
  }
  public var type: SIRLAsset.SirlAssetType {
    get
  }
  public var externalID: Swift.String {
    get
  }
  public var displayId: Swift.String {
    get
  }
  public var isAvalible: Swift.Bool {
    get
  }
  public var location: SIRLCore.SirlLocation? {
    get
  }
  public var batteryLevel: Swift.Int? {
    get
  }
  public var timestamp: Foundation.Date? {
    get
  }
  public var assetTag: SIRLAsset.SirlAssetTag? {
    get
  }
  public init(id: Swift.Int32, lgId: Swift.Int32, type: SIRLAsset.SirlAssetType?, typeId: Swift.Int32? = nil, companyId: Swift.Int32, externalId: Swift.String, meta: Swift.Dictionary<Swift.String, Swift.String>?, sku: SIRLAsset.SirlAssetSku? = nil, tagMappings: Swift.Array<SIRLAsset.SirlAssetTagMapping>? = nil, location: SIRLAsset.AssetLocation? = nil, batteryLevel: Swift.Int32? = nil)
  required convenience public init(from decoder: any Swift.Decoder) throws
  public func getMetaField(_ field: Swift.String) -> Swift.String?
  @objc deinit
}
public struct AssetLocation : Swift.Decodable {
  public init(from decoder: any Swift.Decoder) throws
}
@_hasMissingDesignatedInitializers @available(iOS 10.0, *)
public class SirlAssetArea : Swift.Decodable {
  public var name: Swift.String?
  public var coordLowerLeft: SIRLCore.SirlLocation? {
    get
  }
  public var coordUpperRight: SIRLCore.SirlLocation? {
    get
  }
  public var isValid: Swift.Bool {
    get
  }
  public func getDistance(coord: SIRLCore.SirlLocation) -> Swift.Double?
  public static func build(name: Swift.String) -> SIRLAsset.SirlAssetArea
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 10.0, *)
public struct GetCompanySKUs : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAssetSku]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(companyId: Swift.Int32, filter: [Swift.String : Swift.String]?)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct GetAssetAreas : SIRLCore.APIRequest {
  public var hasParams: Swift.Bool
  public typealias Response = [SIRLAsset.SirlAssetArea]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public init(mlid: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct AssociateNewAssetAndTagWithSKU : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTagMapping
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(sku_id: Swift.Int32, tag_identifier: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class SirlAssetAlert : Swift.Decodable {
  public var code: Swift.Int32
  public var name: Swift.String?
  public var level: Swift.String
  public var message: Swift.String?
  public var asset: SIRLAsset.SirlAsset?
  public init(code: Swift.Int32, name: Swift.String?, level: Swift.String, message: Swift.String, asset: SIRLAsset.SirlAsset? = nil)
  required convenience public init(from decoder: any Swift.Decoder) throws
  @objc deinit
}
@available(iOS 10.0, *)
public struct GetActiveAssetMapping : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTagMapping
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(assetId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
public enum SIRLAssetAlertCode : Swift.Int32, Swift.Encodable {
  case _UNKOWN
  case NOT_DETECTED
  case SERVICE_PAST_DUE
  case OUTSIDE_SERVICE_AREA
  public init?(rawValue: Swift.Int32)
  public typealias RawValue = Swift.Int32
  public var rawValue: Swift.Int32 {
    get
  }
}
@available(iOS 10.0, *)
public struct GetAssetAlerts : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAssetAlert]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public init(mlid: Swift.Int32, alert_code: SIRLAsset.SIRLAssetAlertCode? = nil)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct AssociateAssetWithArea : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAsset
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(assetId: Swift.Int32, areaName: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class AssetFilter {
  public var id: Swift.Int32? {
    get
    set
  }
  public var externalId: Swift.String? {
    get
    set
  }
  public var typeId: Swift.Int32? {
    get
    set
  }
  public var missing: Swift.Bool? {
    get
    set
  }
  public var fetchBatteryLevel: Swift.Bool {
    get
    set
  }
  public init()
  public func addServiceDates(start: Foundation.Date?, end: Foundation.Date?)
  public func addAssignedArea(area: Swift.String)
  public func assignedArea() -> Swift.String?
  public func serviceStartDate() -> Foundation.Date?
  public func serviceEndDate() -> Foundation.Date?
  public func addSkuList(_ list: [Swift.Int])
  public func getSkuList() -> [Swift.Int]
  @objc deinit
}
@available(iOS 10.0, *)
public struct DisassociateAssetWithTag : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTagMapping
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(assetId: Swift.Int32, tagId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class SirlTagStatus {
  public init(batteryLevel: Swift.Int? = nil)
  @objc deinit
}
@available(iOS 10.0, *)
public class SirlAssetType : Swift.Decodable {
  public var id: Swift.Int32 {
    get
  }
  public var name: Swift.String {
    get
  }
  public var meta: Swift.Dictionary<Swift.String, Swift.String>? {
    get
  }
  public var color: UIKit.UIColor? {
    get
  }
  public init(id: Swift.Int32, name: Swift.String, color: Swift.String?, meta: Swift.Dictionary<Swift.String, Swift.String>?)
  required convenience public init(from decoder: any Swift.Decoder) throws
  public func getSKUList(completion: @escaping (_ assets: SIRLAsset.SirlAsset) -> Swift.Void)
  @objc deinit
}
extension UIKit.UIColor {
  convenience public init?(hex: Swift.String)
}
@_hasMissingDesignatedInitializers @available(iOS 10.0, *)
public class SirlAssetSku : Swift.Decodable {
  public var id: Swift.Int
  public var name: Swift.String?
  public var sku: Swift.String?
  public var color: Swift.String?
  public var meta: Swift.Dictionary<Swift.String, Swift.String>?
  public static func build(id: Swift.Int, name: Swift.String?, color: Swift.String?, sku: Swift.String?, meta: Swift.Dictionary<Swift.String, Swift.String>? = nil) -> SIRLAsset.SirlAssetSku
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 10.0, *)
public struct GetAssetTagById : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTag
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(id: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@_hasMissingDesignatedInitializers @available(iOS 10.0, *)
public class SirlAssetTagMapping : Swift.Decodable {
  public var tagId: Swift.Int?
  public var assetId: Swift.Int32?
  public var assetTag: SIRLAsset.SirlAssetTag?
  public var stopDate: Foundation.Date? {
    get
  }
  public var startDate: Foundation.Date? {
    get
  }
  public var timestamp: Foundation.Date? {
    get
  }
  @objc deinit
  required public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 10.0, *)
public struct GetAssetByExternalId : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAsset
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public init(mlId: Swift.Int32, externalId: Swift.String, params: Swift.String? = nil)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct DisassociateAssetFromArea : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAsset
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(assetId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@_hasMissingDesignatedInitializers public class SirlAssetService {
  public static let shared: SIRLAsset.SirlAssetService
  public func getAssetForLocation(mlid: Swift.UInt32, filter: SIRLAsset.AssetFilter? = nil, completion: @escaping (_ assets: [SIRLAsset.SirlAsset]) -> Swift.Void)
  public func getAssetAreas(mlid: Swift.UInt32, completion: @escaping (_ assets: [SIRLAsset.SirlAssetArea]) -> Swift.Void)
  public func getAssetByExternalId(mlid: Swift.Int32, externalId: Swift.String, completion: @escaping (_ assets: SIRLAsset.SirlAsset?) -> Swift.Void)
  public func getAssetSKUList(asseTypeId: Swift.Int32, mlid: Swift.Int32? = nil, completion: @escaping (_ assets: [SIRLAsset.SirlAssetSku]) -> Swift.Void)
  public func getAssetSKUList(companyId: Swift.Int32, completion: @escaping (_ assets: [SIRLAsset.SirlAssetSku]) -> Swift.Void)
  public func getAssetBySKUs(asseTypeId: Swift.Int32, skus: [Swift.Int32], accessToken: Swift.String? = nil, mlid: Swift.Int32? = nil, completion: @escaping (_ assets: [SIRLAsset.SirlAsset]) -> Swift.Void)
  public func getAssetAlerts(mlid: Swift.Int32, alert_code: SIRLAsset.SIRLAssetAlertCode, completion: @escaping (_ alerts: [SIRLAsset.SirlAssetAlert]) -> Swift.Void)
  public func getAssetTagByMac(macAddress: Swift.String, completion: @escaping (_ assettag: SIRLAsset.SirlAssetTag?) -> Swift.Void)
  public func getAssetTagById(id: Swift.Int32, completion: @escaping (_ assettag: SIRLAsset.SirlAssetTag?) -> Swift.Void)
  public func getCompanySKUs(companyId: Swift.Int32, filter: [Swift.String : Swift.String]? = nil, completion: @escaping (_ skus: [SIRLAsset.SirlAssetSku]) -> Swift.Void)
  public func getActiveAssetMapping(id: Swift.Int32, completion: @escaping (_ assettag: SIRLAsset.SirlAssetTagMapping?) -> Swift.Void)
  public func associateNewAssetAndTagWithSKU(skuId: Swift.Int32, tagIdentifier: Swift.String, accessToken: Swift.String? = nil, completion: @escaping (_ mapping: SIRLAsset.SirlAssetTagMapping?) -> Swift.Void)
  public func associateAssetWithTag(assetId: Swift.Int32, tagId: Swift.Int32, accessToken: Swift.String? = nil, completion: @escaping (_ mapping: SIRLAsset.SirlAssetTagMapping?) -> Swift.Void)
  public func disassociateAssetWithTag(assetId: Swift.Int32, tagId: Swift.Int32, accessToken: Swift.String? = nil, completion: @escaping (_ assettag: SIRLAsset.SirlAssetTagMapping?) -> Swift.Void)
  public func associateAssetWithArea(assetId: Swift.Int32, areaName: Swift.String, accessToken: Swift.String? = nil, completion: @escaping (_ asset: SIRLAsset.SirlAsset?) -> Swift.Void)
  public func disassociateAssetWithArea(assetId: Swift.Int32, accessToken: Swift.String? = nil, completion: @escaping (_ asset: SIRLAsset.SirlAsset?) -> Swift.Void)
  public func programAssetTag(mlId: Swift.Int32, macAddress: Swift.String, accessToken: Swift.String? = nil, completion: @escaping (_ assettag: SIRLAsset.SirlAssetTag?) -> Swift.Void)
  public func getAssetTagMappingHistory(tagId: Swift.Int32, completion: @escaping (_ history: [SIRLAsset.SirlAssetTagMapping]?) -> Swift.Void)
  @objc deinit
}
@available(iOS 10.0, *)
public struct GetAssetTagByMac : SIRLCore.APIRequest {
  public typealias Response = SIRLAsset.SirlAssetTag
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(macaddress: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class SirlAssetStatus {
  public init(isMissing: Swift.Bool = true, x: Swift.Double = 0.0, y: Swift.Double = 0.0, z: Swift.Double = 0.0, timestamp: Foundation.Date? = Date())
  @objc deinit
}
@available(iOS 10.0, *)
public struct GetAssetTagHistory : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAssetTagMapping]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(tagId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public struct GetAssets : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAsset]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public init(mlid: Swift.Int32, filter: SIRLAsset.AssetFilter? = nil)
  public func encode(to encoder: any Swift.Encoder) throws
}
@available(iOS 10.0, *)
public class SirlAssetTag : Swift.Decodable {
  public var tagId: Swift.Int32 {
    get
  }
  public var mac: Swift.String? {
    get
  }
  public init(id: Swift.Int32, lgId: Swift.Int32? = nil, gpsId: Swift.Int32? = nil, deviceId: Swift.Int32? = nil, macAddress: Swift.String? = nil, active: Swift.Bool? = nil, transmitRate: Swift.Int? = -1, transmitPower: Swift.Int? = -1, typeId: Swift.Int = 0, createdOn: Foundation.Date? = nil, location: Swift.Dictionary<Swift.String, Swift.String>? = nil)
  required convenience public init(from decoder: any Swift.Decoder) throws
  @objc deinit
}
@available(iOS 10.0, *)
public struct GetSkuListByCompany : SIRLCore.APIRequest {
  public typealias Response = [SIRLAsset.SirlAssetSku]
  public typealias RequestBody = SIRLCore.NULLCodable
  public var resourceName: Swift.String {
    get
  }
  public var requestMethod: Swift.String {
    get
  }
  public var requestBody: SIRLCore.NULLCodable {
    get
  }
  public var hasParams: Swift.Bool {
    get
  }
  public init(companyId: Swift.Int32)
  public func encode(to encoder: any Swift.Encoder) throws
}
extension SIRLAsset.SIRLAssetAlertCode : Swift.Equatable {}
extension SIRLAsset.SIRLAssetAlertCode : Swift.Hashable {}
extension SIRLAsset.SIRLAssetAlertCode : Swift.RawRepresentable {}
